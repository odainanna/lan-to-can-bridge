# With multicast guidance from:  https://stackoverflow.com/a/1794373

import socket
import struct

# listen to this port 
MCAST_GRP, MCAST_PORT = '239.0.0.1', 62222

# create the socket
sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM, socket.IPPROTO_UDP)
sock.setsockopt(socket.SOL_SOCKET, socket.SO_REUSEADDR, 1)

# bind to the server address
sock.bind(('', MCAST_PORT))

# tell the operating system to add the socket to the multicast group
mreq = struct.pack('4sl', socket.inet_aton(MCAST_GRP), socket.INADDR_ANY)
sock.setsockopt(socket.IPPROTO_IP, socket.IP_ADD_MEMBERSHIP, mreq)


from decode import DecodedMessage
import can
from can.interfaces.virtual import VirtualBus

config = {'interface': 'virtual', 'bitrate': 125000}
bus = VirtualBus(receive_own_messages=True)
can.rc.update(config)

# notify when received
can.Notifier([bus], [can.Printer()])

from decode import lan_to_can

# listen on LAN
while True:
    lan_message = sock.recv(10240)
    msg = lan_to_can(lan_message)
    bus.send(msg)

